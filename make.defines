#*
#* libspe2 - A wrapper library to adapt the JSRE SPU usage model to SPUFS 
#* Copyright (C) 2005 IBM Corp. 
#*
#* This library is free software; you can redistribute it and/or modify it
#* under the terms of the GNU Lesser General Public License as published by 
#* the Free Software Foundation; either version 2.1 of the License, 
#* or (at your option) any later version.
#*
#*  This library is distributed in the hope that it will be useful, but 
#*  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
#*  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public 
#*  License for more details.
#*
#*   You should have received a copy of the GNU Lesser General Public License 
#*   along with this library; if not, write to the Free Software Foundation, 
#*   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#*

# USER CONFIGURATION

# ARCH: target architecture
#     undefined: compiler's default architecture
#     ppc:       32-bit PowerPC
#     ppc64:     64-bit PowerPC
# Default value:
#     ARCH =

# DEBUG: enable debugging
#     1:         enable
#     others:    disable
# Default value:
#     DEBUG =

# TEST_STATIC: set static libraries as test targets
#     1:         test static libraries
#     others:    test shared libraries
#
# Default value:
#     TEST_STATIC =

# CROSS: prefix of PPU toolchain
#
# Default:
#
#     (native build)
#     CROSS =
#     (cross build)
#     CROSS = ppu-

# SPU_CROSS: prefix of SPU toolchain
#
# Default:
#     SPU_CROSS = spu-


BUILD_ARCH = $(shell uname -m)

ifneq "$(BUILD_ARCH)"  "ppc"
ifneq "$(BUILD_ARCH)"  "ppc64"
    CROSS_COMPILE	= 1
endif
endif

ifeq "$(CROSS_COMPILE)" "1"
    CROSS	?= ppu-
    # RPM defined default flags may not work with this cross-compiler
    override OPTFLAGS = 
    SYSROOT	?= ../../../sysroot
    prefix	?= /usr
    RPM_ARCH	?= noarch
else
    prefix	?= /usr/local
    RPM_ARCH	?= $(ARCH)
endif
ifeq "$(RPM_ARCH)" ""
    RPM_ARCH    = ppc
endif

ifeq "$(ARCH)" "ppc"
    ARCH_CFLAGS	= -m32  -mabi=altivec
else
ifeq "$(ARCH)" "ppc64"
    ARCH_CFLAGS	= -m64
else
# Use default
    ARCH_CFLAGS	=
endif
endif


SPU_CROSS	 = spu-

exec_prefix	 = ${prefix}
bindir		 = ${exec_prefix}/bin
libdir		 = ${exec_prefix}/lib
includedir	 = ${prefix}/include
speinclude	 = ${prefix}/spu/include
spe_ld_dir	 = ${libdir}/spe/
adabindingdir   = ${prefix}/adainclude

DESTDIR		:=
ROOT		:= ${DESTDIR}${SYSROOT}

INSTALL		:= /usr/bin/install -c
INSTALL_PROGRAM := ${INSTALL} -m 755
INSTALL_DATA	:= ${INSTALL} -m 644
INSTALL_LINK	:= ln -sf
INSTALL_DIR	:= ${INSTALL} -d -m 755

MAJOR_VERSION	:= 2
MINOR_VERSION	:= 3.0

libspe2_A	:= libspe2.a
libspe2_SO	:= libspe2.so.${MAJOR_VERSION}.${MINOR_VERSION}
libspe2_SONAME	:= libspe2.so.${MAJOR_VERSION}



CC		:= ${CROSS}gcc
EMBEDSPU	:= $(CROSS)embedspu
CTAGS		:= ctags

CFLAGS := -O2 -Wall -I. -fPIC -I$(TOP)/include -fexceptions -std=gnu99 \
			-Wformat -Wdisabled-optimization \
			-Wundef -Wshadow -Wcast-align -Wwrite-strings \
			-Wmissing-prototypes -Wmissing-declarations \
			-Wmissing-noreturn -Wredundant-decls \
			-Wnested-externs -Winline -Wformat \
			${ARCH_CFLAGS} ${EXTRA_CFLAGS} ${OPTFLAGS}

ifeq "$(TEST_STATIC)" "1"
     TEST_LDFLAGS	+= -static
endif


SPU_CC		 = $(SPU_CROSS)gcc
SPU_CFLAGS	 =

ifdef DEBUG
CFLAGS += -DDEBUG -g
endif

